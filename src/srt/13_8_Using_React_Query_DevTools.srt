1
00:00:00,000 --> 00:00:06,000
similar to

2
00:00:06,000 --> 00:00:10,000
many front end libraries, react query comes with its own dev tool.

3
00:00:10,000 --> 00:00:14,000
It's a powerful tool for debugging and monitoring our queries.

4
00:00:14,000 --> 00:00:18,000
Let me show you how you can install and use it. So here in the terminal, let's

5
00:00:18,000 --> 00:00:22,000
install at tan stack slash react

6
00:00:22,000 --> 00:00:26,000
dash query dash dev tools version 4.28.

7
00:00:26,000 --> 00:00:30,000
Alright good, now let's go to main.tsx.

8
00:00:30,000 --> 00:00:34,000
On the top we should import a component called

9
00:00:34,000 --> 00:00:38,000
react query dev tools from at tan stack slash

10
00:00:38,000 --> 00:00:42,000
react query. Now here we have two items with the same name,

11
00:00:42,000 --> 00:00:46,000
make sure to select the second one with the blue icon.

12
00:00:46,000 --> 00:00:50,000
Because the other one has the wrong namespace, so select this,

13
00:00:50,000 --> 00:00:54,000
so we should import this component from tan stack slash react query

14
00:00:54,000 --> 00:00:58,000
dev tools. Now we should add this to our component tree

15
00:00:58,000 --> 00:01:02,000
after the app component. So react query

16
00:01:02,000 --> 00:01:06,000
dev tools. Okay, so this only goes in our

17
00:01:06,000 --> 00:01:10,000
development build, so later when we build for production,

18
00:01:10,000 --> 00:01:14,000
react query dev tools is not going to be included. Okay, now back in the browser,

19
00:01:14,000 --> 00:01:18,000
so we get this beautiful icon on the corner for

20
00:01:18,000 --> 00:01:22,000
toggling the dev tools. So here's the content of our cache,

21
00:01:22,000 --> 00:01:26,000
currently we have a single item with this key, we can click on this key to see

22
00:01:26,000 --> 00:01:30,000
more details. Up here we have the query details, so we have the key,

23
00:01:30,000 --> 00:01:34,000
the number of observers and the last update.

24
00:01:34,000 --> 00:01:38,000
The number of observers refers to the number of components that are using

25
00:01:38,000 --> 00:01:42,000
this query. So currently we have a single component using this query.

26
00:01:42,000 --> 00:01:46,000
Now if this component is unmounted, meaning if it's removed from the

27
00:01:46,000 --> 00:01:50,000
screen, the observers will be 0 and the query will be inactive.

28
00:01:50,000 --> 00:01:54,000
Inactive queries will eventually get garbage collected and

29
00:01:54,000 --> 00:01:58,000
removed from the cache. We'll talk about that in the next lesson. Now here we have

30
00:01:58,000 --> 00:02:02,000
a bunch of useful actions, we can refetch a query, we can

31
00:02:02,000 --> 00:02:06,000
invalidate it, we'll talk about that later in the section. We have a couple of useful

32
00:02:06,000 --> 00:02:10,000
buttons for triggering the loading and error states.

33
00:02:10,000 --> 00:02:14,000
So if you click on this button, look, this is what the user sees while

34
00:02:14,000 --> 00:02:18,000
they're waiting for the data. Now let's restore this, we can also

35
00:02:18,000 --> 00:02:22,000
trigger an error, so this is what the user sees when something goes

36
00:02:22,000 --> 00:02:26,000
wrong, very useful. Now down below we can see

37
00:02:26,000 --> 00:02:30,000
the data associated with this key, so we have an array of

38
00:02:30,000 --> 00:02:34,000
200 items, here are the first 100 items,

39
00:02:34,000 --> 00:02:38,000
here's the first to do with these properties, very useful.

40
00:02:38,000 --> 00:02:42,000
Now below that we have the query explorer window where we can see

41
00:02:42,000 --> 00:02:46,000
all the properties of our query. This is not something we use that often,

42
00:02:46,000 --> 00:02:50,000
but something that is useful to know is that all our queries have

43
00:02:50,000 --> 00:02:54,000
a default cache time of 300,000 milliseconds,

44
00:02:54,000 --> 00:02:58,000
which is 5 minutes. So if our query has no observers,

45
00:02:58,000 --> 00:03:02,000
it will be inactive and will be garbage collected after 5 minutes.

46
00:03:02,000 --> 00:03:06,000
Of course this is something that we can configure, which I'm going to show you in the next lesson.

